{"remainingRequest":"C:\\Users\\NETDB\\expert2\\expert_web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\NETDB\\expert2\\expert_web\\src\\components\\Integration.vue?vue&type=template&id=81adc052&","dependencies":[{"path":"C:\\Users\\NETDB\\expert2\\expert_web\\src\\components\\Integration.vue","mtime":1646199605945},{"path":"C:\\Users\\NETDB\\expert2\\expert_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646199720093},{"path":"C:\\Users\\NETDB\\expert2\\expert_web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1646199725776},{"path":"C:\\Users\\NETDB\\expert2\\expert_web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646199720093},{"path":"C:\\Users\\NETDB\\expert2\\expert_web\\node_modules\\vue-loader\\lib\\index.js","mtime":1646199724004}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}